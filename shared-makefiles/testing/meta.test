#!/bin/bash

## receive variables passed from make
#config_dir="$CONFIG_DIR"
#results_dir="$RESULTS_DIR"

config_dir=../../config
results_dir=../../results

arbitrary_valid_entry_threshold=2000000
sampling_count=10001

total_tests=0
tests_per_analysis=2

## determine how many tests need to be run in the end
meta_config_files=`grep -E "saige" $config_dir/*config | sed 's/:/\t/g' | awk '{print $1}'`
meta_analysis_prefixes=""
for file in $meta_config_files ;
do
    prefix=`awk '/analysis_prefix/ {print $NF}' $file`
    meta_analysis_prefixes="$meta_analysis_prefixes $prefix"
    (( total_tests = total_tests + tests_per_analysis ))    
done

echo "1..$total_tests"

for analysis in $meta_analysis_prefixes ;
do
    ancestries="European East_Asian"
    for ancestry in $ancestries ;
    do
	for method in "SAIGE" ;
	do
	    expected_absence_no_inputs=1
	    analysis_directory_missing=0
	    analysis_file_missing=0
	    analysis_successful=0
	    frequencies_present=0
	    pvalues_broken=0
	    betas_broken=0
	    stderrs_broken=0
	    heterogeneity_broken=0
	    
	    chips="GSA_batch1 GSA_batch2 GSA_batch3 GSA_batch4 GSA_batch5 Omni25 OmniX Oncoarray"
	    for chip in $chips ;
	    do
		## assume analysis checks have already been run. then absence means valid exclusion
		prefix="$results_dir/$analysis/$ancestry/$method/$analysis.$chip.${method,,}"
		output_file="$prefix.tsv.gz"
		if [[ ! -d "$results_dir/$analysis/$ancestry/$method" ]] ; then
		    analysis_directory_missing=1
		else
		    if [[ -f "$output_file" ]] ; then
			expected_absence_no_inputs=0
		    fi
		fi
	    done
	    if [[ "$expected_absence_no_inputs" -eq "0" ]] ; then
		output_file="$results_dir/$analysis/$ancestry/$method/$analysis.$ancestry.$method.tsv.gz"
		if [[ ! -f "$output_file" ]] ; then
		    analysis_file_missing=1
		else
		    ## analysis file definitely exists. probe it for things
		    ## enough entries that it seems like the entire analysis didn't fail!!
		    if [[ "`gunzip -c $output_file | wc -l`" -ge "$arbitrary_valid_entry_threshold" ]] ; then
			analysis_successful=1
		    fi
		    ## frequencies that exist!!
		    if [[ "`gunzip -c $output_file | head -n $sampling_count | awk 'NR > 1 && $6 != "NA"' | wc -l`" -gt "0" ]] ; then
			frequencies_present=1
		    fi
		    ## p-values that make sense!!
		    if [[ "`gunzip -c $output_file | head -n $sampling_count | awk 'NR > 1 && $9 < 1e-400' | wc -l`" -gt "0" ]] ; then
			pvalues_broken=1
		    fi
		    ## betas that look like betas!
		    if [[ "`gunzip -c $output_file | head -n $sampling_count | awk 'NR > 1 && $7 < 0' | wc -l`" -eq "0" ]] ; then
			betas_broken=1
		    fi
		    ## stderrs that look like stderrs!
		    if [[ "`gunzip -c $output_file | head -n $sampling_count | awk 'NR > 1 && $8 < 1e-10' | wc -l`" -gt "0" ]] ; then
			stderrs_broken=1
		    fi
		    ## heterogeneity outliers
		    ## note: since this is likely the only place it will happen, test the entire file
		    heterogeneity_broken="`gunzip -c $output_file | awk 'NR > 1 && $11 < 5e-8' | wc -l`"
		fi
	    fi

	    output_tag="$analysis/$ancestry/$method"
	    if [[ "$expected_absence_no_inputs" -gt "0" ]] ; then
		echo "ok - $output_tag ancestry/method combination not requested # SKIP"
	    elif [[ "$analysis_file_missing" -gt "0" ]] ; then
		echo "not ok - $output_tag no meta-analysis file detected"
	    elif [[ "$analysis_successful" -eq "0" ]] ; then
		echo "not ok - $output_tag output file has fewer than $arbitrary_valid_entry_threshold entries, which seems bad"
	    elif [[ "$frequencies_present" -eq "0" ]] ; then
		echo "not ok - $output_tag output file does not have annotated frequencies"
	    elif [[ "$betas_broken" -gt "0" ]] ; then
		echo "not ok - $output_tag output file is for binary trait analysis but needs to convert from OR->logIR; currently has OR-like coefficients that are never negative"
	    elif [[ "$stderrs_broken" -gt "0" ]] ; then
		echo "not ok - $output_tag output file has extremely unlikely standard errors"
	    elif [[ "$pvalues_broken" -gt "0" ]] ; then
		echo "not ok - $output_tag output file seems to have divergent p-values"
	    elif [[ "$heterogeneity_broken" -gt "0" ]] ; then
		echo "not ok - $output_tag output file had $heterogeneity_broken outlier p-values; this cutoff is currently very stringent"
	    else
		echo "ok - $output_tag results: trait is binary; output exists; frequencies, p-values, betas, stderrs ok; variant count acceptable"
	    fi
	done
    done
done
