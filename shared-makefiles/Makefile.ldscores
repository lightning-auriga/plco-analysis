## create modified file that just contains desired columns except beta is replaced by beta/se

include $(PROJECT_BASE_DIR)/Makefile.config

RESULTS_DIR := $(RESULT_OUTPUT_DIR)

#SAIGE_TARGETS := $(shell find $(RESULTS_DIR) -wholename "*/European/*saige.tsv" -print)
BOLT_TARGETS := $(shell find $(RESULTS_DIR) -wholename "*/European/*boltlmm.tsv" -print)
FASTGWA_TARGETS := $(shell find $(RESULTS_DIR) -wholename "*/European/*fastgwa.tsv" -print)

ALL_OUTPUT := $(subst .tsv,.ldsc.log.success,$(SAIGE_TARGETS) $(BOLT_TARGETS) $(FASTGWA_TARGETS))

MUNGE_SUMSTATS := ~/Development/ldsc/munge_sumstats.py
LD_CHR := /CGF/GWAS/Scans/PLCO/builds/1/analysis-requests/ldsc/eur_w_ld_chr/
LD_CHR_GRCh38 := $(subst w_ld_chr/,w_ld_chr_GRCh38/,$(LD_CHR))
LD_TARGETS := $(patsubst %,$(LD_CHR_GRCh38)%.l2.M_5_50,$(CHRS))
LDSCORE_SUMMARY := $(RESULTS_DIR)/ldscore_summary.tsv
.PHONY: all
.DELETE_ON_ERROR:
.SECONDARY:
.SECONDEXPANSION:
all: $(ALL_OUTPUT) $(LDSCORE_SUMMARY)

$(LDSCORE_SUMMARY): $(subst .ldsc.log.success,.ldsc.report,$(ALL_OUTPUT))
	cat $^ | sort -k 1,1 -k 2,2 -k 3,3 -k 4,4 | awk 'NR == 1 {print "phenotype\tplatform\tancestry\tmethod\tinflation_factor\tintercept\terror"} ; NR > 1' | sed 's/(// ; s/)//' > $@

%.ldsc.report: %.ldsc.log.success
	echo "$(word 2,$(subst /, ,$(subst $(RESULTS_DIR),,$(dir $<)))) $(notdir $<)" | sed 's/.ldsc.log.success// ; s/\./\t/ ; s/\./\t/' | awk '{printf("%s\t%s\t%s\t%s\t", $$2, $$3, $$1, $$4)}' > $@
	grep -E "Lambda GC|Intercept" $(subst .success,,$^) | sed 's/:/\t/g' | awk '/Lambda GC/ {printf("%s\t",$$3)} ; /Intercept/ {print $$2"\t"$$3}' >> $@

%.ldsc.log.success: %.ldsc.sumstats.gz.success $(LD_TARGETS)
	$(call qsub_handler,$(subst .success,,$@),$(LDSC_PY) --h2 $(subst .success,,$<) --ref-ld-chr $(LD_CHR_GRCh38) --w-ld-chr $(LD_CHR_GRCh38) --out $(subst .log.success,,$@))

COMMA := ,
%.ldsc.sumstats.gz.success: %.ldsc.ldsc-processed.tsv
	$(call qsub_handler,$(subst .success,,$@),$(MUNGE_SUMSTATS) --signed-sumstats STAT$(COMMA)0 --out $(subst .sumstats.gz.success,,$@) --a1-inc --frq Freq_Tested_Allele_in_TOPMed --N-col N --a1 Tested_Allele --a2 Other_Allele --snp SNP --sumstats $< --p P)

%.ldsc.ldsc-processed.tsv: %.tsv
	awk 'NR > 1 {$$7 = $$7 / $$8 ; print $$1":"$$2"\t"$$4"\t"$$5"\t"$$6"\t"$$7"\t"$$9"\t"$$10} ; NR == 1 {print "SNP\tTested_Allele\tOther_Allele\tFreq_Tested_Allele_in_TOPMed\tSTAT\tP\tN"}' $< > $@

$(LD_CHR_GRCh38)%.l2.M_5_50: $(LD_CHR_GRCh38)%.l2.ldscore.gz | $$(dir $$@)
	gunzip -c $< | awk 'NR > 1 && $$5 >= 0.05' | wc -l > $@

$(LD_CHR_GRCh38)%.l2.ldscore.gz: $(LD_CHR_GRCh38)%.lifted.bed | $$(dir $$@)
	sed 's/:/\t/g ; s/^chr//' $< | awk 'NR == 1 {print "CHR\tSNP\tBP\tCM\tMAF\tL2"} ; {print $$1"\t"$$1":"$$2+1"\t"$$2+1"\t0\t"$$5"\t"$$6}' | gzip -c > $@

$(LD_CHR_GRCh38)%.lifted.bed: $(LD_CHR_GRCh38)%.input.bed | $$(dir $$@)
	$(LIFTOVER_EXECUTABLE) $< $(LIFTOVER_19_TO_38) $@ $(subst .bed,.fail,$@)

$(LD_CHR_GRCh38)%.input.bed: $$(subst $$(LD_CHR_GRCh38),$$(LD_CHR),$$(subst .input.bed,.l2.ldscore.gz,$$@)) | $$(dir $$@)
	gunzip -c $< | awk 'NR > 1 {print "chr"$$1"\t"$$3-1"\t"$$3"\t"$$2":"$$5":"$$6}' > $@

$(sort $(dir $(LD_TARGETS))):
	mkdir -p $@
